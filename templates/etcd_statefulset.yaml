---
apiVersion: apps/v1
kind: StatefulSet
metadata:
    labels:
        app: etcd
        suite: pachyderm
        helm.sh/chart: {{ include "pachyderm.chart" . }}
        app.kubernetes.io/managed-by: {{ .Release.Service }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    name: etcd
    namespace: {{ .Release.Namespace }}
spec:
    replicas: 1
    selector:
        matchLabels:
            app: etcd
            suite: pachyderm
    serviceName: etcd-headless
    template:
        metadata:
            labels:
                app: etcd
                suite: pachyderm
            name: etcd
            namespace: {{ .Release.Namespace }}
        spec:
            containers:
              - args:
                  - '"/usr/local/bin/etcd" "--listen-client-urls=http://0.0.0.0:2379"
                    "--advertise-client-urls=http://0.0.0.0:2379" "--data-dir=/var/data/etcd"
                    "--auto-compaction-retention=1" "--max-txn-ops=10000" "--max-request-bytes=52428800"
                    "--quota-backend-bytes=8589934592" "--max-snapshots=5" "--max-wals=5"
                    "--listen-peer-urls=http://0.0.0.0:2380" "--initial-cluster-token=pach-cluster" 
                    "--initial-advertise-peer-urls=http://${ETCD_NAME}.etcd-headless.${NAMESPACE}.svc.cluster.local:2380"
                    "--initial-cluster=etcd-0=http://etcd-0.etcd-headless.${NAMESPACE}.svc.cluster.local:2380"'
                command:
                  - /bin/sh
                  - -c
                env:
                  - name: ETCD_NAME
                    valueFrom:
                        fieldRef:
                            apiVersion: v1
                            fieldPath: metadata.name
                  - name: NAMESPACE
                    valueFrom:
                        fieldRef:
                            apiVersion: v1
                            fieldPath: metadata.namespace
                image: quay.io/coreos/etcd:v3.3.5
                imagePullPolicy: IfNotPresent
                name: etcd
                ports:
                  - containerPort: 2379
                    name: client-port
                  - containerPort: 2380
                    name: peer-port
                resources:
                    requests:
                        cpu: "1"
                        memory: 2G
                volumeMounts:
                  - mountPath: /var/data/etcd
                    name: etcd-storage
            imagePullSecrets: []
    volumeClaimTemplates:
      - metadata:
            annotations:
                volume.beta.kubernetes.io/storage-class: {{ include "pachyderm.fullname" . }}
            labels:
                app: etcd
                suite: pachyderm
            name: etcd-storage
            namespace: {{ .Release.Namespace }}
        spec:
            accessModes:
              - ReadWriteOnce
            resources:
                requests:
                    storage: {{ required "amazon.storageSize is required if amazon installation is specified." .Values.amazon.storageSize }}
